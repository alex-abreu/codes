import javax.swing.*;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.border.*;

import javax.swing.JFormattedTextField;
import javax.swing.text.MaskFormatter;
import java.text.ParseException;


import java.awt.*;
import java.awt.event.*;
import java.io.BufferedReader;
import java.util.ArrayList;
import java.util.Arrays;

import java.util.*;
import java.io.*;
import java.io.IOException; 
import java.nio.file.*; 


public class FormCad
{
    JPanel background = new JPanel();
    GGDash g = new GGDash();
    ArrayList<String> helper_horarios = new ArrayList<String>();

    DefaultTableModel users_model;
    JTable users_table;

    boolean lock_session = false;

    private JPanel cad_form;
    JTextField tf_1;
    JFormattedTextField tf_2;
    JFormattedTextField tf_3;
    JTextField tf_4;
    JFormattedTextField tf_5;
    JFormattedTextField tf_6;
    private JCheckBox medic_check;
    private JCheckBox sec_check;
    private JCheckBox gg_check;
    private JButton add_button;
    private JButton cancel_button;
    private JButton clear_button;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        loadHelper();
        try {
            $$$setupUI$$$();
        } catch (ParseException e) {e.printStackTrace();}
        setUpGUI();
    }

    public void clearSelection()
    {
        medic_check.setSelected(false);sec_check.setSelected(false);gg_check.setSelected(false);
    }

    public void clearFields()
    {
        tf_1.setText("");tf_2.setText("");tf_3.setText("");tf_4.setText("");tf_5.setText("");
        medic_check.setSelected(false);sec_check.setSelected(false);gg_check.setSelected(false);
        tf_6.setText("dd/mm/aaaa");
    }

    public void loadHelper()
    {
        try
        {
            File f = new File("sechelper.txt");
            BufferedReader br = new BufferedReader(new FileReader(f));

            String line = br.readLine();
            while(line != null)
            {
                helper_horarios.add(line);
                line = br.readLine();
            }
            br.close();

            for(int i = 0; i < helper_horarios.size(); i++)
            {
                System.out.println(helper_horarios.get(i));
            }

        } catch(Exception e){

			String error = e.toString();
        }
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()throws ParseException {
        cad_form = new JPanel();
        cad_form.setLayout(new GridBagLayout());
        cad_form.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), "Cadastro de Funcionários", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$(null, -1, -1, cad_form.getFont()), new Color(-16777216)));
        final JLabel label1 = new JLabel();
        label1.setText("Nome");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        cad_form.add(label1, gbc);
        tf_1 = new JTextField();
        tf_1.setColumns(10);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cad_form.add(tf_1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("CPF");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        cad_form.add(label2, gbc);
        MaskFormatter cpf = new MaskFormatter("###.###.###-##");
                cpf.setValidCharacters("0123456789");
        tf_2 = new JFormattedTextField(cpf);
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cad_form.add(tf_2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("RG");
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        cad_form.add(label3, gbc);
        MaskFormatter rg = new MaskFormatter("##.###.###");
                rg.setValidCharacters("0123456789");
        tf_3 = new JFormattedTextField(rg);
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cad_form.add(tf_3, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Endereço");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        cad_form.add(label4, gbc);
        tf_4 = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.gridwidth = 8;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cad_form.add(tf_4, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("CLT");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        cad_form.add(label5, gbc);
        MaskFormatter pis = new MaskFormatter("###.#####.##-#");
                pis.setValidCharacters("0123456789");
        tf_5 = new JFormattedTextField(pis);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cad_form.add(tf_5, gbc);
        final JLabel label6 = new JLabel();
        label6.setText("     Adimissão");
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        cad_form.add(label6, gbc);
        MaskFormatter data = new MaskFormatter("##/##/####");
            data.setValidCharacters("0123456789");
        tf_6 = new JFormattedTextField(data);
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 4;
        gbc.gridwidth = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cad_form.add(tf_6, gbc);
        final JLabel label7 = new JLabel();
        label7.setText("Tipo Funcionário");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        cad_form.add(label7, gbc);
        medic_check = new JCheckBox();
        medic_check.setText("Médico");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        cad_form.add(medic_check, gbc);
        gg_check = new JCheckBox();
        gg_check.setText("Gerente Geral");
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        cad_form.add(gg_check, gbc);
        sec_check = new JCheckBox();
        sec_check.setText("Secretária");
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        cad_form.add(sec_check, gbc);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        panel1.setPreferredSize(new Dimension(5, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        cad_form.add(panel1, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel2.setPreferredSize(new Dimension(5, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        cad_form.add(panel2, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        panel3.setPreferredSize(new Dimension(5, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 8;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        cad_form.add(panel3, gbc);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridBagLayout());
        panel4.setPreferredSize(new Dimension(0, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        cad_form.add(panel4, gbc);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new GridBagLayout());
        panel5.setPreferredSize(new Dimension(0, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.BOTH;
        cad_form.add(panel5, gbc);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new GridBagLayout());
        panel6.setPreferredSize(new Dimension(0, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.BOTH;
        cad_form.add(panel6, gbc);
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new GridBagLayout());
        panel7.setPreferredSize(new Dimension(0, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 7;
        gbc.fill = GridBagConstraints.BOTH;
        cad_form.add(panel7, gbc);
        add_button = new JButton();
        add_button.setText("Adicionar");
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 8;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cad_form.add(add_button, gbc);
        cancel_button = new JButton();
        cancel_button.setText("Cancelar");
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 10;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cad_form.add(cancel_button, gbc);
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new GridBagLayout());
        panel8.setPreferredSize(new Dimension(0, 15));
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 9;
        gbc.fill = GridBagConstraints.BOTH;
        cad_form.add(panel8, gbc);
        clear_button = new JButton();
        clear_button.setText("Limpar");
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 8;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cad_form.add(clear_button, gbc);

        add_button.addActionListener(new AddFunctListener());
        cancel_button.addActionListener(new CancelListener());
        clear_button.addActionListener(new ClearListener());
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() 
    {
        return cad_form;
    }

    public JComponent getBackgroundPanel()
    {
        return background;
    }

    /*
    public static void main(String[] args)
    {
        new FormCad().setUpGUI();
    }
    */

    private void setUpGUI()
    {
        //JFrame frame = new JFrame();
        background.setLayout(new BoxLayout(background, BoxLayout.Y_AXIS));
            background.add($$$getRootComponent$$$());
            background.add(g.getRootComponent());
        //frame.add(background);
        //frame.setVisible(true);
        //frame.setSize(800,600);
        //frame.pack();
    }

    /**
     * LISTENERS PARA CAPTURAR OS EVENTOS DA GUI
     */
    class AddFunctListener implements ActionListener
    { 
        @Override
        public void actionPerformed(ActionEvent ev)
        {
            System.out.println("entrou aq");
            if(sec_check.isSelected() == true && (medic_check.isSelected() == false && gg_check.isSelected() == false) && lock_session == false)
            {
                System.out.println("sec");

                /**SUGESTÃO DE HORÁRIOS */
                SecHourSugestion suggestion = new SecHourSugestion();
                String[] tmp = new String[helper_horarios.size()];
                    for(int i = 0; i < helper_horarios.size(); i++)
                        tmp[i] = (String) helper_horarios.get(i);
                String[] out = suggestion.sugestion(tmp, 8, 20);

                    String input = (String) JOptionPane.showInputDialog(null, "Horários livres",
                    "ExPeRt SuJeStiOn SySsTem", JOptionPane.QUESTION_MESSAGE, null, // Use
                                                                                    // default
                                                                                    // icon
                    out, // Array of choices
                    out[0]); // Initial choice
                /**Formulário da secretária */
                SecForm sec = new SecForm(tf_1.getText(), tf_2.getText(), tf_3.getText(), tf_4.getText(), tf_5.getText(), tf_6.getText(),g, input);
                background.add(sec.$$$getRootComponent$$$());
                background.revalidate();
                background.repaint();
                clearSelection();
                lock_session = true;
                return;
            } else if(medic_check.isSelected() == true && (sec_check.isSelected() == false && gg_check.isSelected() == false) && lock_session == false)
            {
                System.out.println("med");
                MedicForm medic = new MedicForm(tf_1.getText(), tf_2.getText(), tf_3.getText(), tf_4.getText(), tf_5.getText(), tf_6.getText(), g);
                background.add(medic.$$$getRootComponent$$$());
                background.revalidate();
                background.repaint();
                clearSelection();
                lock_session = true;
                return;
            } else if(gg_check.isSelected() == true && (sec_check.isSelected() == false && medic_check.isSelected() == false) && lock_session == false)
            {
                System.out.println("gg");
                GGForm gg = new GGForm(tf_1.getText(), tf_2.getText(), tf_3.getText(), tf_4.getText(), tf_5.getText(), tf_6.getText(),g);
                background.add(gg.$$$getRootComponent$$$());
                background.revalidate();
                background.repaint();
                clearSelection();
                lock_session = true;
                return;
            } else {
                clearSelection();
                JOptionPane.showMessageDialog(null, "Erro na seleção do tipo de funcionário", "Erro funcionários", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
        }
    }//AddFunctListener

    class CancelListener implements ActionListener
    { 
        @Override
        public void actionPerformed(ActionEvent ev)
        {
            if(lock_session)
            {
                clearSelection();
                System.out.println("removeu!");
                background.remove(background.getComponentCount()-1);
                background.revalidate();
                background.repaint();
                lock_session = false;
            }
        }
    }//AddFunctListener

    class ClearListener implements ActionListener
    { 
        @Override
        public void actionPerformed(ActionEvent ev)
        {
            clearFields();
        }
    }//AddFunctListener
    
}
