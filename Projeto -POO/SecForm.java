import javax.swing.*;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.border.*;
import javax.swing.JOptionPane;

import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.*;
import java.io.*;
import java.io.IOException; 
import java.nio.file.*; 


public class SecForm {
    private JPanel sec_form;
    private JTextField user_field;
    private JPasswordField pass_field;
    private JSpinner s_hours1;
    private JSpinner s_hours2;
    private JSpinner s_hours3;
    private JSpinner s_hours4;
    private JButton add_sec_button;

    /**fields */
    private String name;
    private String cpf;
    private String rg;
    private String adress;
    private String clt;
    private String da;
    GGDash g;
    int suggestion;
    int h_end;
    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }


    public SecForm(String name, String cpf, String rg, String addrs, String clt, String da, GGDash g, String h)
    {
        this.name = name; this.cpf = cpf; this.rg = rg; 
        this.adress = addrs; this.clt = clt; this.da = da;

        this.g = g;
        suggestion = Integer.parseInt(h);
        
        h_end = suggestion + 8;
        s_hours1.getModel().setValue(suggestion);
        s_hours3.getModel().setValue(h_end);
    }

    public void clearFields()
    {
        user_field.setText("");
        pass_field.setText("");
    }

    public void writeSecFile(int hin, int hin2, int hout, int hout2)
    {
        try
        {
            File file = new File("sechelper.txt");
            BufferedWriter writer = new BufferedWriter(new FileWriter(file, true));
            String out = String.format("%d %d %d %d", hin, hin2,hout, hout2);

            writer.write(out);
            writer.write('\n');
            writer.close();

        }catch(Exception e){
			String error = e.toString();
		}
    }
    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        sec_form = new JPanel();
        sec_form.setLayout(new GridBagLayout());
        sec_form.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), "Secretária", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, new Color(-16777216)));
        final JLabel label1 = new JLabel();
        label1.setText("Usuário");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        sec_form.add(label1, gbc);
        user_field = new JTextField();
        user_field.setColumns(10);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        sec_form.add(user_field, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Senha");
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        sec_form.add(label2, gbc);
        pass_field = new JPasswordField();
        pass_field.setColumns(10);
        gbc = new GridBagConstraints();
        gbc.gridx = 8;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        sec_form.add(pass_field, gbc);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        panel1.setPreferredSize(new Dimension(5, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        sec_form.add(panel1, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel2.setPreferredSize(new Dimension(10, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        sec_form.add(panel2, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        panel3.setPreferredSize(new Dimension(5, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        sec_form.add(panel3, gbc);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridBagLayout());
        panel4.setPreferredSize(new Dimension(10, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 10;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        sec_form.add(panel4, gbc);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new GridBagLayout());
        panel5.setPreferredSize(new Dimension(10, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        sec_form.add(panel5, gbc);
        SpinnerNumberModel s_model = new SpinnerNumberModel(0,0,23,1);
        SpinnerNumberModel s1_model = new SpinnerNumberModel(0,0,23,1);
        SpinnerNumberModel s2_model = new SpinnerNumberModel(0,0,59,1);
        SpinnerNumberModel s3_model = new SpinnerNumberModel(0,0,59,1);
        s_hours1 = new JSpinner(s_model);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        sec_form.add(s_hours1, gbc);
        s_hours2 = new JSpinner(s2_model);
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        sec_form.add(s_hours2, gbc);
        s_hours3 = new JSpinner(s1_model);
        gbc = new GridBagConstraints();
        gbc.gridx = 8;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        sec_form.add(s_hours3, gbc);
        s_hours4 = new JSpinner(s3_model);
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        sec_form.add(s_hours4, gbc);
        add_sec_button = new JButton();
        add_sec_button.setText("Adicionar Secretária");
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        sec_form.add(add_sec_button, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Entrada");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        sec_form.add(label3, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Saída");
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        sec_form.add(label4, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("Horas");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        sec_form.add(label5, gbc);
        final JLabel label6 = new JLabel();
        label6.setText("Minutos");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        sec_form.add(label6, gbc);
        final JLabel label7 = new JLabel();
        label7.setText("Horas");
        gbc = new GridBagConstraints();
        gbc.gridx = 8;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        sec_form.add(label7, gbc);
        final JLabel label8 = new JLabel();
        label8.setText("Minutos");
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        sec_form.add(label8, gbc);
        add_sec_button.addActionListener(new AddSecListener());
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return sec_form;
    }
    
    class AddSecListener implements ActionListener 
    {
        @Override
        public void actionPerformed(ActionEvent ev)
        {
            System.out.println(name + cpf + rg + adress + clt + da);
            try {
                s_hours1.commitEdit();
                s_hours2.commitEdit();
                s_hours3.commitEdit();
                s_hours4.commitEdit();
            } catch ( java.text.ParseException e ) 
            {
                e.printStackTrace();
            }

            int horas1 = (Integer) s_hours1.getValue();
            int minutos1 = (Integer) s_hours2.getValue();


            System.out.println("h1:"+horas1+"m1"+minutos1);
            Horario in = new Horario(horas1, minutos1);
            
            int horas2 = (Integer) s_hours3.getValue();
            int minutos2 = (Integer) s_hours4.getValue();


            System.out.println("h1:"+horas2+"m1"+minutos2);
            Horario out = new Horario(horas2, minutos2);

            writeSecFile(horas1, minutos1, horas2, minutos2);
            
            Secretaria s = new Secretaria(name, cpf, rg, adress, clt, da, in, out); 
            String pass = new String(pass_field.getPassword());
            System.out.println("user before: "+user_field.getText().length() +"senha before:"+pass.length());
            /**
             * validando usario e senha
             */
            if(user_field.getText().length() == 0)
            {
                JOptionPane.showMessageDialog(null,"Usuário em branco!","AVISO",JOptionPane.WARNING_MESSAGE);
                return;
            }
            if(pass.length() == 0)
            {
                JOptionPane.showMessageDialog(null,"Senha em branco!","AVISO",JOptionPane.WARNING_MESSAGE);
                return;
            }
            Usuario u = new Usuario(user_field.getText(), pass);
            System.out.println("user: "+u.getUsuario() +"senha:"+u.getSenha());

            Object[] data = {u.getUsuario(), u.getSenha(), "Secretária"};
            if(u.cadastraUsuario(s) != -1)  
            {
                JOptionPane.showMessageDialog(null, "Usuário "+ u.getUsuario() + " Já cadastrado!.");
                return;
            }
            
            Usuarios.addUsuario(u);
            g.users_model.addRow(data);
            g.users_table.clearSelection();
            g.users_model.fireTableDataChanged();
            clearFields();
        }
    }
}
